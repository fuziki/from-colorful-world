///
/// @Generated by Mockolo
///



import AVFoundation
import AppleExtensions
import Assets
import Combine
import CombineSchedulers
import Core
import Foundation
import SwiftUI
import UIKit
@testable import AppMain


class MainViewUseCaseMock: MainViewUseCase {
    init() { }
    init(latestReadInfomationDate: Date? = nil) {
        self.latestReadInfomationDate = latestReadInfomationDate
    }


    private(set) var latestReadInfomationDateSetCallCount = 0
    var latestReadInfomationDate: Date? = nil { didSet { latestReadInfomationDateSetCallCount += 1 } }

    private(set) var fetchLatestInfomationDateCallCount = 0
    var fetchLatestInfomationDateHandler: ((String) -> (AnyPublisher<Date, Error>))?
    func fetchLatestInfomationDate(gistId: String) -> AnyPublisher<Date, Error> {
        fetchLatestInfomationDateCallCount += 1
        if let fetchLatestInfomationDateHandler = fetchLatestInfomationDateHandler {
            return fetchLatestInfomationDateHandler(gistId)
        }
        fatalError("fetchLatestInfomationDateHandler returns can't have a default value thus its handler must be set")
    }
}

class InfomationViewUseCaseMock: InfomationViewUseCase {
    init() { }


    private(set) var fetchCallCount = 0
    var fetchHandler: ((String) -> (AnyPublisher<InformationApi.Response, Error>))?
    func fetch(gistId: String) -> AnyPublisher<InformationApi.Response, Error> {
        fetchCallCount += 1
        if let fetchHandler = fetchHandler {
            return fetchHandler(gistId)
        }
        fatalError("fetchHandler returns can't have a default value thus its handler must be set")
    }

    private(set) var readCallCount = 0
    var readHandler: (() -> ())?
    func read()  {
        readCallCount += 1
        if let readHandler = readHandler {
            readHandler()
        }
        
    }
}

